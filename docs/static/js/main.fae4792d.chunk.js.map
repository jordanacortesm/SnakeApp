{"version":3,"sources":["helpers/appleOnSnake.js","components/Apple/Apple.js","components/PlayPause/PlayPause.js","helpers/snakeOnApple.js","helpers/snakeOnSnake.js","helpers/snakeOut.js","components/Snake/Snake.js","helpers/snakeMove.js","components/Board/Board.js","SnakeApp.js","index.js"],"names":["appleOnSnake","snake","x","y","next","snakeX","snakeY","applePos","Apple","actualSnakePosition","setApple","setScore","tablero","useMemo","Array","fill","useEffect","eat","min","max","Math","floor","random","newApplePos","score","e","className","mapa","length","drawApple","PlayPause","setPause","pause","onClick","snakeOnApple","snakeOnSnake","state","snakeOut","initialPosition","Snake","React","memo","setActualSnakePosition","apple","setLives","useState","setSnake","direction","setDirection","touchDiv","useRef","anterior","interval","setInterval","current","focus","snakeLeft","snakeRight","snakeUp","snakeDown","snakeMove","clearInterval","fired","ref","tabIndex","onKeyDown","keyCode","handleKeyDown","empty","aux","drawSnake","Board","SnakeApp","lives","style","marginLeft","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fae4792d.chunk.js","sourcesContent":["\r\nexport const appleOnSnake = (snake,{ x , y })=>{\r\n    if (snake.next===null) {\r\n        if ((snake.snakeX===x)&&(snake.snakeY===y)) {\r\n            // console.log(\"esta encima\");\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n    // return false\r\n    return appleOnSnake(snake.next, { x, y });\r\n}","import React,{ useEffect, useMemo } from 'react';\r\nimport { appleOnSnake } from '../../helpers/appleOnSnake';\r\nimport './apple.css'\r\n\r\nlet applePos = {\r\n}\r\nconst boardMax=30;\r\nexport const Apple = ({ actualSnakePosition, setApple, setScore }) => {\r\n    const tablero = useMemo(() => [ new Array(boardMax).fill(0) , new Array(boardMax).fill(0) ],[]);\r\n\r\n    useEffect(() => {\r\n\r\n        const newApplePos = (actualSnakePosition,min,max)=>{\r\n            // console.log(actualSnakePosition);\r\n            let x=Math.floor(Math.random() * (max - min + 1)) + min;\r\n            let y=Math.floor(Math.random() * (max - min + 1)) + min;\r\n            \r\n            while (appleOnSnake(actualSnakePosition,{x,y})) {\r\n                x=Math.floor(Math.random() * (max - min + 1)) + min;\r\n                y=Math.floor(Math.random() * (max - min + 1)) + min;\r\n            }\r\n            return {\r\n                x,\r\n                y\r\n            }\r\n        }\r\n\r\n        if (!actualSnakePosition.eat) {\r\n            applePos=newApplePos(actualSnakePosition,0,29);\r\n            actualSnakePosition.score&&setScore((e)=>e+1);\r\n            setApple(applePos);\r\n            \r\n        }\r\n    }, [actualSnakePosition,setApple, setScore])\r\n\r\n    const drawApple = ()=>{\r\n        let mapa=[];\r\n        for (let y = 0; y < tablero[0].length; y++) {\r\n            for (let x = 0; x < tablero[1].length; x++){\r\n\r\n                // let empty=true;\r\n                // let aux = snake;\r\n\r\n                if ((applePos.x===x)&&(applePos.y===y)) {\r\n                    mapa=[...mapa,<div key={`XA${x}_YA${y}`} className=\"apple-cell\" />];\r\n                }else{\r\n                    mapa=[...mapa,<div key={`XA${x}_YA${y}`} className=\"empty-cell\" />];\r\n                }\r\n            }\r\n        }\r\n        \r\n        return mapa;\r\n    }\r\n    return (\r\n        <div className=\"board-wrap\">\r\n            { drawApple() }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './playPause.css';\r\n\r\nexport const PlayPause = ({setPause, pause, score, setScore}) => {\r\n    // console.log(setPause);\r\n    const handleClick = ()=>{\r\n        if (pause===2) {\r\n            setScore(0);\r\n            setPause(1);\r\n        }else{\r\n            setPause(0);\r\n        }\r\n    }\r\n    const drawContent = ()=>{\r\n        if (pause===2) {\r\n            const highscore = <div className=\"play\">Game Over!<span className=\"highscore\">Highscore: {score}</span></div>;\r\n            return highscore;\r\n        }else{\r\n            return <div className=\"play\">PLAY!</div>;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"playPauseContainer\"  onClick={handleClick}>\r\n            {\r\n                drawContent()\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const snakeOnApple = (snake,{ x , y })=>{\r\n    if (snake.next===null) {\r\n        if ((snake.snakeX===x)&&(snake.snakeY===y)) {\r\n            // console.log(\"esta encima\");\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n    // return false\r\n    return snakeOnApple(snake.next, { x, y });\r\n}","\r\nexport const snakeOnSnake = (snake)=>{\r\n    if (snake.next===null) {\r\n        return{\r\n            x:snake.snakeX,\r\n            y:snake.snakeY,\r\n            state:false\r\n        }\r\n        // if ((snake.snakeX===x)&&(snake.snakeY===y)) {\r\n        //     console.log(\"esta encima\");\r\n        //     return true;\r\n        // }else{\r\n        //     return false;\r\n        // }\r\n    }\r\n    // return false\r\n    let {x , y , state} = snakeOnSnake(snake.next)\r\n    if ((snake.snakeX===x)&&(snake.snakeY===y)) {\r\n        return {\r\n            x,\r\n            y,\r\n            state:true\r\n        }\r\n    }\r\n    return {\r\n        x,\r\n        y,\r\n        state\r\n    }\r\n    // return snakeOnApple(snake.next);\r\n}","\r\nexport const snakeOut = (snake,min,max)=>{\r\n    if (snake.next===null) {\r\n        if ((snake.snakeX>max)||(snake.snakeX<min)||(snake.snakeY>max)||(snake.snakeY<min)) {\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n    // return false\r\n    return snakeOut(snake.next, min, max);\r\n}","import React, { useState, useEffect, useMemo, useRef } from 'react';\r\nimport { snakeMove } from '../../helpers/snakeMove';\r\nimport { snakeOnApple } from '../../helpers/snakeOnApple';\r\nimport { snakeOnSnake } from '../../helpers/snakeOnSnake';\r\nimport { snakeOut } from '../../helpers/snakeOut';\r\n\r\nimport './snake.css';\r\n\r\n//const initialPosition = [ [4,5,6] , [14,14,14] ];\r\n\r\nconst initialPosition = {\r\n    \r\n    snakeX:4,\r\n    snakeY:14,\r\n    eat:false,\r\n    score:false,\r\n    next:{\r\n\r\n        snakeX:5,\r\n        snakeY:14,\r\n        eat:false,\r\n        score:false,\r\n        next:{\r\n        \r\n            snakeX:6,\r\n            snakeY:14,\r\n            eat:false,\r\n            score:false,\r\n            next:null\r\n        }\r\n    }\r\n}\r\nconst initialDirection = 2;\r\nconst boardMax=30;\r\nexport const Snake = React.memo(({ setActualSnakePosition, apple, pause, setLives, setPause}) => {\r\n\r\n    const tablero = useMemo(() => [ new Array(boardMax).fill(0) , new Array(boardMax).fill(0) ],[]);\r\n    const [snake, setSnake]= useState( initialPosition );\r\n    const [direction, setDirection] = useState(initialDirection);\r\n\r\n    const touchDiv = useRef(null);\r\n    \r\n    useEffect(() => {\r\n        setActualSnakePosition(snake);\r\n    }, [setActualSnakePosition])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    useEffect(() => {\r\n        const appleEaten = ()=>{\r\n            setActualSnakePosition(snake)\r\n            if(!snake.eat){\r\n                setSnake((anterior)=>{\r\n                    return {\r\n                        snakeX:anterior.snakeX,\r\n                        snakeY:anterior.snakeY,\r\n                        eat:true,\r\n                        next:anterior\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        const { state } = snakeOnSnake(snake);\r\n\r\n        if((snakeOut(snake,0,boardMax))||(state)){\r\n            setSnake(initialPosition);\r\n            setDirection(initialDirection);\r\n            setLives(e=>{\r\n                if (e-1===-1) {\r\n                    setPause(2);\r\n                    return 3;\r\n                }else{\r\n                    return e-1;\r\n                }\r\n            });\r\n        }\r\n        snakeOnApple(snake, apple)&&appleEaten();\r\n    }, [snake, apple, tablero, setActualSnakePosition, setSnake, setLives, setPause])\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (!pause) {\r\n                touchDiv?.current&&touchDiv.current.focus();\r\n                setSnake((e)=>{\r\n                    return snakeMove(e, direction);\r\n                })\r\n            }\r\n          }, 100)\r\n        \r\n          return () => clearInterval(interval);\r\n    }, [setSnake, direction, pause])\r\n\r\n    let fired=false;\r\n    const handleKeyDown=({keyCode}) =>{\r\n        if (fired) {\r\n            return;\r\n        }\r\n        fired=true;\r\n        // console.log(keyCode);\r\n        if (keyCode===65) {\r\n            direction===0?setDirection(3):setDirection((e)=>e-1);\r\n        }\r\n        if (keyCode===68) {\r\n            direction===3?setDirection(0):setDirection((e)=>e+1);\r\n        }\r\n        // console.log(direction);\r\n    }\r\n    const drawSnake = ()=>{\r\n        let mapa=[];\r\n        for (let y = 0; y < tablero[0].length; y++) {\r\n            for (let x = 0; x < tablero[1].length; x++){\r\n\r\n                let empty=true;\r\n                let aux = snake;\r\n\r\n                do {\r\n                    let {snakeX, snakeY} = aux;\r\n                    if((snakeX===x)&&(snakeY===y)){\r\n                        mapa=[...mapa,<div key={`X${x}_Y${y}`} className=\"snake-cell\" />];\r\n                        empty=false;\r\n                        break;\r\n                    }\r\n                    aux=aux.next; \r\n                } while (aux!==null);\r\n\r\n                if (empty) {\r\n                    mapa=[...mapa,<div key={`X${x}_Y${y}`} className=\"empty-cell\" />];\r\n                }\r\n\r\n            }\r\n        }\r\n        \r\n        return mapa;\r\n    }\r\n    return (\r\n        <div ref={touchDiv} className=\"touch\" tabIndex={-1} onKeyDown={(e) => handleKeyDown(e)}>\r\n            {\r\n                drawSnake()\r\n            }\r\n        </div>\r\n    )\r\n});","\r\nexport const snakeMove = (snake, direction)=>{\r\n    switch (direction) {\r\n        case 0:\r\n            const snakeLeft = (snake)=>{\r\n                // console.log(snake);\r\n                if (snake.next===null) {\r\n                    // console.log(\"snake: \"+JSON.stringify(snake,null, 2));\r\n                    return {\r\n                        snakeX:snake.snakeX-1,\r\n                        snakeY:snake.snakeY,\r\n                        eat:false,\r\n                        score:true,\r\n                        next:null\r\n                    };\r\n                }\r\n                return {\r\n                    snakeX:snake.next.snakeX,\r\n                    snakeY:snake.next.snakeY,\r\n                    eat:false,\r\n                    score:true,\r\n                    next:snakeLeft(snake.next)};\r\n            }\r\n            return snakeLeft(snake);\r\n        case 2:\r\n            const snakeRight = (snake)=>{\r\n                // console.log(snake);\r\n                if (snake.next===null) {\r\n                    // console.log(\"snake: \"+JSON.stringify(snake,null, 2));\r\n                    return {\r\n                        snakeX:snake.snakeX+1,\r\n                        snakeY:snake.snakeY,\r\n                        eat:false,\r\n                        score:true,\r\n                        next:null\r\n                    };\r\n                }\r\n                return {\r\n                    snakeX:snake.next.snakeX,\r\n                    snakeY:snake.next.snakeY,\r\n                    eat:false,\r\n                    score:true,\r\n                    next:snakeRight(snake.next)};\r\n            }\r\n            return snakeRight(snake);\r\n        case 1:\r\n            const snakeUp = (snake)=>{\r\n                // console.log(snake);\r\n                if (snake.next===null) {\r\n                    // console.log(\"snake: \"+JSON.stringify(snake,null, 2));\r\n                    return {\r\n                        snakeX:snake.snakeX,\r\n                        snakeY:snake.snakeY-1,\r\n                        eat:false,\r\n                        score:true,\r\n                        next:null\r\n                    };\r\n                }\r\n                return {\r\n                    snakeX:snake.next.snakeX,\r\n                    snakeY:snake.next.snakeY,\r\n                    eat:false,\r\n                    score:true,\r\n                    next:snakeUp(snake.next)};\r\n            }\r\n            return snakeUp(snake);\r\n        case 3:\r\n            const snakeDown = (snake)=>{\r\n                // console.log(snake);\r\n                if (snake.next===null) {\r\n                    // console.log(\"snake: \"+JSON.stringify(snake,null, 2));\r\n                    return {\r\n                        snakeX:snake.snakeX,\r\n                        snakeY:snake.snakeY+1,\r\n                        eat:false,\r\n                        score:true,\r\n                        next:null\r\n                    };\r\n                }\r\n                return {\r\n                    snakeX:snake.next.snakeX,\r\n                    snakeY:snake.next.snakeY,\r\n                    eat:false,\r\n                    score:true,\r\n                    next:snakeDown(snake.next)};\r\n            }\r\n            return snakeDown(snake);\r\n            \r\n\r\n        default:\r\n            return {\r\n    \r\n                snakeX:4,\r\n                snakeY:14,\r\n                next:{\r\n            \r\n                    snakeX:5,\r\n                    snakeY:14,\r\n                    next:{\r\n                    \r\n                        snakeX:6,\r\n                        snakeY:14,\r\n                        next:null\r\n                    }\r\n                }\r\n            };\r\n    }\r\n};","import React, { useState } from 'react';\r\nimport { Apple } from '../Apple/Apple';\r\nimport { PlayPause } from '../PlayPause/PlayPause';\r\nimport { Snake } from '../Snake/Snake';\r\nimport './board.css';\r\n\r\nconst initialPosition = {\r\n    \r\n    snakeX:4,\r\n    snakeY:14,\r\n    eat:true,\r\n    score:false,\r\n    next:{\r\n\r\n        snakeX:5,\r\n        snakeY:14,\r\n        eat:true,\r\n        score:false,\r\n        next:{\r\n        \r\n            snakeX:6,\r\n            snakeY:14,\r\n            eat:true,\r\n            score:false,\r\n            next:null\r\n        }\r\n    }\r\n}\r\nexport const Board = ({pause, setPause, setScore, setLives, score}) => {\r\n    const initialApple = {\r\n        x:10,\r\n        y:20\r\n    }\r\n    const [apple, setApple] = useState(initialApple);\r\n\r\n    const [actualSnakePosition, setActualSnakePosition] = useState(initialPosition);\r\n\r\n    return (\r\n        <div className=\"board-container\" >\r\n            \r\n            <Snake \r\n                setActualSnakePosition={ setActualSnakePosition } \r\n                apple={ apple }\r\n                pause={ pause }\r\n                setLives={ setLives }\r\n                setPause={ setPause }\r\n            />\r\n            <Apple \r\n                actualSnakePosition={ actualSnakePosition }\r\n                setApple={ setApple }    \r\n                setScore={ setScore }\r\n            />\r\n            {\r\n            pause&&\r\n            <PlayPause\r\n                setPause={setPause}\r\n                pause={pause}\r\n                score={score}\r\n                setScore={setScore}\r\n            />\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Board } from './components/Board/Board';\r\nimport './SnakeApp.css';\r\n\r\nconst initialLives = 3;\r\nexport const SnakeApp = () => {\r\n\r\n    const [lives, setLives] = useState(initialLives);\r\n\r\n    const [pause, setPause] = useState(1);\r\n\r\n    const [score, setScore] = useState(0);\r\n\r\n    return (\r\n        <div className=\"main-container\" >\r\n            <div className=\"content\">\r\n                <div className=\"containerA animate__animated animate__fadeInRight\">\r\n                    <div className=\"titulo\">\r\n                    <h1 className=\" \">Snake app</h1>\r\n                    </div>\r\n                    <div className=\"containerATitle\">\r\n                        <h2>Controls:</h2>\r\n                    </div>\r\n                    <div style={{marginLeft: 100}}>\r\n                        <h3>Press A to go left</h3> \r\n                    </div>\r\n                    <div style={{marginLeft: 100}}>\r\n                        <h3>Press D to go right </h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"containerB\">\r\n                    <Board\r\n                        pause={pause}\r\n                        setPause={setPause}\r\n                        setScore={setScore}\r\n                        setLives={setLives}\r\n                        score={score}\r\n                    />\r\n                    <div className=\"menu\">\r\n                        <div className=\"vidas\">LIVES: {lives}</div>\r\n                        <div className=\"pausa\" onClick={ (e)=>{ setPause(1) } }>\r\n                            <button className=\"reset-btn\">PAUSE</button>\r\n                        </div>\r\n                        <div className=\"score\">SCORE:{score}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { SnakeApp } from './SnakeApp';\n\nReactDOM.render(\n    <SnakeApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}